package aoc

import aoc.Day20.{Trench, given}

class Test20 extends munit.FunSuite:

  private val sample: Trench =
    """
      |..#.#..#####.#.#.#.###.##.....###.##.#..###.####..#####..#....#..#..##..##
      |#..######.###...####..#..#####..##..#.#####...##.#.#..#.##..#.#......#.###
      |.######.###.####...#.##.##..#..#..#####.....#.#....###..#.##......#.....#.
      |.#..#..##..#...##.######.####.####.#.#...#.......#..#.#.#...####.##.#.....
      |.#..#...##.#.##..#...##.#.##..###.#......#.#.......#.#.#.####.###.##...#..
      |...####.#..#..#.##.#....##..#.####....##...##..#...#......#.#.......#.....
      |..##..####..#...#.#.#...##..#.#..###..#####........#..####......#..#
      |
      |#..#.
      |#....
      |##..#
      |..#..
      |..###""".stripMargin.decoded

  private val input = entire[Trench](20)

  test("part 1 - sample") {
    assertEquals(sample.run(2), 35)
  }

  test("part 1 - result: " + input.run(2)) {}

  test("part 2 - sample") {
    assertEquals(sample.run(50), 3351)
  }

  test("part 2 - result: " + input.run(50)) {}
